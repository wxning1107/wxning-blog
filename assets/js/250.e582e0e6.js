(window.webpackJsonp=window.webpackJsonp||[]).push([[250],{1494:function(o,e,i){"use strict";i.r(e);var t=i(15),v=Object(t.a)({},(function(){var o=this,e=o.$createElement,t=o._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[t("h1",{attrs:{id:"cookie-和-session-的关系和区别是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie-和-session-的关系和区别是什么"}},[o._v("#")]),o._v(" Cookie 和 Session 的关系和区别是什么？")]),o._v(" "),t("h1",{attrs:{id:"cookie-机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie-机制"}},[o._v("#")]),o._v(" Cookie 机制")]),o._v(" "),t("p",[o._v("HTTP 是“无状态”的，这既是优点也是缺点。优点是服务器没有状态差异，可以很容易地组成集群，而缺点就是无法支持需要记录状态的事务操作。好在 HTTP 协议是可扩展的，后来发明的 Cookie 技术，给 HTTP 增加了“记忆能力”。")]),o._v(" "),t("p",[o._v("Cookie 机制相当于是服务器给每个客户端都贴上一张小纸条，上面写了一些只有服务器才能理解的数据，需要的时候客户端把这些信息发给服务器，服务器看到 Cookie，就能够认出对方是谁了。")]),o._v(" "),t("p",[o._v("通过响应头字段Set-Cookie和请求头字段Cookie传递 Cookie。")]),o._v(" "),t("p",[o._v("当用户通过浏览器第一次访问服务器的时候，服务器肯定是不知道他的身份的。所以，就要创建一个独特的身份标识数据，格式是“key=value”，然后放进 Set-Cookie 字段里，随着响应报文一同发给浏览器。")]),o._v(" "),t("p",[o._v("浏览器收到响应报文，看到里面有 Set-Cookie，知道这是服务器给的身份标识，于是就保存起来，下次再请求的时候就自动把这个值放进 Cookie 字段里发给服务器。")]),o._v(" "),t("p",[o._v("因为第二次请求里面有了 Cookie 字段，服务器就知道这个用户不是新人，之前来过，就可以拿出 Cookie 里的值，识别出用户的身份，然后提供个性化的服务。")]),o._v(" "),t("p",[t("img",{attrs:{src:i(883),alt:"img"}})]),o._v(" "),t("p",[o._v("Cookie 是由浏览器负责存储的，所以，它是“浏览器绑定”的，只能在本浏览器内生效。")]),o._v(" "),t("p",[o._v("Cookie 就是服务器委托浏览器存储在客户端里的一些数据，而这些数据通常都会记录用户的关键识别信息。所以，就需要在“key=value”外再用一些手段来保护，防止外泄或窃取，这些手段就是 Cookie 的属性。")]),o._v(" "),t("p",[o._v("首先，我们应该设置 Cookie 的生存周期，一旦超过这个期限浏览器就认为是 Cookie 失效，在存储里删除，也不会发送给服务器。")]),o._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[o._v("设置Cookie生存周期")]),o._v(" "),t("p",[o._v("Cookie 的有效期可以使用 Expires 和 Max-Age 两个属性来设置。")]),o._v(" "),t("ul",[t("li",[t("p",[o._v("“Expires”俗称“过期时间”，用的是绝对时间点，可以理解为“截止日期”（deadline）。")])]),o._v(" "),t("li",[t("p",[o._v("“Max-Age”用的是相对时间，单位是秒，浏览器用收到报文的时间点再加上 Max-Age，就可以得到失效的绝对时间。")])])])]),o._v(" "),t("p",[o._v("其次，我们需要设置 Cookie 的作用域，让浏览器仅发送给特定的服务器和 URI，避免被其他网站盗用。")]),o._v(" "),t("p",[o._v("作用域的设置比较简单，“Domain”和“Path”指定了 Cookie 所属的域名和路径，浏览器在发送 Cookie 前会从 URI 中提取出 host 和 path 部分，对比 Cookie 的属性。如果不满足条件，就不会在请求头里发送 Cookie。")]),o._v(" "),t("p",[o._v("最后要考虑的就是Cookie 的安全性了，写过前端的同学一定知道，在 JS 脚本里可以用 document.cookie 来读写 Cookie 数据，这就带来了安全隐患，有可能会导致“跨站脚本”（XSS）攻击窃取数据。")]),o._v(" "),t("p",[o._v("属性“HttpOnly”会告诉浏览器，此 Cookie 只能通过浏览器 HTTP 协议传输，禁止其他方式访问，浏览器的 JS 引擎就会禁用 document.cookie 等一切相关的 API，脚本攻击也就无从谈起了。")]),o._v(" "),t("p",[o._v("另一个属性“SameSite”可以防范“跨站请求伪造”（XSRF）攻击，设置成“SameSite=Strict”可以严格限定 Cookie 不能随着跳转链接跨站发送，而“SameSite=Lax”则略宽松一点，允许 GET/HEAD 等安全方法，但禁止 POST 跨站发送。")]),o._v(" "),t("p",[o._v("还有一个属性叫“Secure”，表示这个 Cookie 仅能用 HTTPS 协议加密传输，明文的 HTTP 协议会禁止发送。")]),o._v(" "),t("p",[t("strong",[o._v("Cookie 应用：")])]),o._v(" "),t("p",[o._v("Cookie 最基本的一个用途就是"),t("strong",[o._v("身份识别")]),o._v("，保存用户的登录信息，实现会话事务。")]),o._v(" "),t("p",[o._v("比如，你用账号和密码登录某电商，登录成功后网站服务器就会发给浏览器一个 Cookie，内容大概是“name=yourid”，这样就成功地把身份标签贴在了你身上。")]),o._v(" "),t("p",[o._v("之后你在网站里随便访问哪件商品的页面，浏览器都会自动把身份 Cookie 发给服务器，所以服务器总会知道你的身份，一方面免去了重复登录的麻烦，另一方面也能够自动记录你的浏览记录和购物下单（在后台数据库或者也用 Cookie），实现了“状态保持”。")]),o._v(" "),t("p",[o._v("Cookie 的另一个常见用途是"),t("strong",[o._v("广告跟踪")]),o._v("。")]),o._v(" "),t("p",[o._v("你上网的时候肯定看过很多的广告图片，这些图片背后都是广告商网站（例如 Google），它会“偷偷地”给你贴上 Cookie 小纸条，这样你上其他的网站，别的广告就能用 Cookie 读出你的身份，然后做行为分析，再推给你广告。")]),o._v(" "),t("p",[o._v("这种 Cookie 不是由访问的主站存储的，所以又叫“第三方 Cookie”（third-party cookie）。如果广告商势力很大，广告到处都是，那么就比较“恐怖”了，无论你走到哪里它都会通过 Cookie 认出你来，实现广告“精准打击”。")]),o._v(" "),t("p",[o._v("为了防止滥用 Cookie 搜集用户隐私，互联网组织相继提出了 DNT（Do Not Track）和 P3P（Platform for Privacy Preferences Project），但实际作用不大。")]),o._v(" "),t("h1",{attrs:{id:"session-机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#session-机制"}},[o._v("#")]),o._v(" Session 机制")])])}),[],!1,null,null,null);e.default=v.exports},883:function(o,e,i){o.exports=i.p+"assets/img/image-20220325185648464.efa9c908.png"}}]);