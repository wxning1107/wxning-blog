(window.webpackJsonp=window.webpackJsonp||[]).push([[353],{1337:function(t,s,e){"use strict";e.r(s);var n=e(15),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"过期数据删除策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#过期数据删除策略"}},[t._v("#")]),t._v(" 过期数据删除策略")]),t._v(" "),e("p",[t._v("我们在使用 Redis 主从集群时，有时会读到过期数据。其实，这是由 Redis 的过期数据删除策略引起的。")]),t._v(" "),e("p",[e("strong",[t._v("Redis 同时使用了两种策略来删除过期的数据，分别是惰性删除策略和定期删除策略。")])]),t._v(" "),e("p",[t._v("先说惰性删除策略。当一个数据的过期时间到了以后，并不会立即删除数据，而是等到再有请求来读写这个数据时，对数据进行检查，如果发现数据已经过期了，再删除这个数据。")]),t._v(" "),e("p",[t._v("这个策略的好处是尽量减少删除操作对 CPU 资源的使用，对于用不到的数据，就不再浪费 时间进行检查和删除了。但是，这个策略会导致大量已经过期的数据留存在内存中，占用 较多的内存资源。所以，Redis 在使用这个策略的同时，还使用了第二种策略:定期删除 策略。")]),t._v(" "),e("p",[t._v("定期删除策略是指，Redis 每隔一段时间(默认 100ms)，就会随机选出一定数量的数 据，检查它们是否过期，并把其中过期的数据删除，这样就可以及时释放一些内存。")])])}),[],!1,null,null,null);s.default=r.exports}}]);