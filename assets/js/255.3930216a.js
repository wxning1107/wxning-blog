(window.webpackJsonp=window.webpackJsonp||[]).push([[255],{978:function(t,r,e){"use strict";e.r(r);var a=e(15),i=Object(a.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"数据结构与算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据结构与算法"}},[t._v("#")]),t._v(" 数据结构与算法")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("本课程涉及数据结构和算法")])]),t._v(" "),e("ul",[e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/00/"}},[t._v("学习内容")])],1)]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/01/01.html"}},[t._v("01 | 线性表")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/01/01.html"}},[t._v("01丨数组")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/01/02.html"}},[t._v("02丨链表")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/01/03.html"}},[t._v("03丨栈")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/01/04.html"}},[t._v("04丨队列")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/02/01.html"}},[t._v("02丨递归算法")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/02/01.html"}},[t._v("01丨递归")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/03/01.html"}},[t._v("03丨排序算法")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/03/01.html"}},[t._v("01丨冒泡排序")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/03/02.html"}},[t._v("02丨插入排序")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/03/03.html"}},[t._v("03丨选择排序")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/03/04.html"}},[t._v("04丨为什么插入排序要比冒泡排序更受欢迎")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/03/05.html"}},[t._v("05丨归并排序")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/03/06.html"}},[t._v("06丨快速排序")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/03/07.html"}},[t._v("07丨O(n)内求无序数组中的第K大元素")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/03/08.html"}},[t._v("08丨桶排序")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/03/09.html"}},[t._v("09丨计数排序")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/03/10.html"}},[t._v("10丨基数排序")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/03/11.html"}},[t._v("11丨如何选择合适的排序算法？")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/03/12.html"}},[t._v("12丨如何优化快速排序？")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/03/13.html"}},[t._v("13丨举例分析排序函数")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/04/01.html"}},[t._v("04丨二分查找算法")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/04/01.html"}},[t._v("01丨实现原理")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/04/02.html"}},[t._v("02丨应用场景的局限性")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/04/03.html"}},[t._v("03丨如何在1千万个整数中快速查找某个整数？")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/04/04.html"}},[t._v("04丨变体一：查找第一个值等于给定值的元素")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/04/05.html"}},[t._v("05丨变体二：查找最后一个值等于给定值的元素")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/04/06.html"}},[t._v("06丨变体三：查找第一个大于等于给定值的元素")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/04/07.html"}},[t._v("07丨变体四：查找最后一个小于等于给定值的元素")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/04/08.html"}},[t._v("08丨如何快速定位一个IP地址的归属地？")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/05/01.html"}},[t._v("05丨跳表")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/05/01.html"}},[t._v("01丨高效的动态插入、删除、查找")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/05/02.html"}},[t._v("02丨跳表索引动态更新")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/05/03.html"}},[t._v("03丨为什么Redis要用跳表来实现有序集合，而不是红黑树？")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/06/01.html"}},[t._v("06丨散列表")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/06/01.html"}},[t._v("01丨散列表")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/06/02.html"}},[t._v("02丨散列冲突---开放寻址法")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/06/03.html"}},[t._v("03丨散列冲突---链表法")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/06/04.html"}},[t._v("04丨如何避免低效地扩容？")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/06/05.html"}},[t._v("05丨工业级散列表举例分析")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/06/06.html"}},[t._v("06丨Word 文档中单词拼写检查功能是如何实现的？")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/06/07.html"}},[t._v("07丨为什么散列表和链表经常会一起使用？")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/06/08.html"}},[t._v("08丨散列表-链表案例一：LRU 缓存淘汰算法")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/06/09.html"}},[t._v("09丨散列表-链表案例二：Redis 有序集合")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/06/10.html"}},[t._v("10丨散列表-链表案例三：Java LinkedHashMap")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/07/01.html"}},[t._v("07丨哈希算法")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/07/01.html"}},[t._v("01丨什么是哈希算法")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/07/02.html"}},[t._v("02丨应用一：安全加密")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/07/03.html"}},[t._v("03丨应用二：唯一标识")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/07/04.html"}},[t._v("04丨应用三：数据校验")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/07/05.html"}},[t._v("05丨应用四：散列函数")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/07/06.html"}},[t._v("06丨哈希算法在分布式系统中的应用")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/07/07.html"}},[t._v("07丨应用五：负载均衡")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/07/08.html"}},[t._v("08丨应用六：数据分片")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/07/09.html"}},[t._v("09丨应用七：分布式存储")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/08/01.html"}},[t._v("08丨二叉树")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/08/01.html"}},[t._v("01丨树")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/08/02.html"}},[t._v("02丨二叉树")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/08/03.html"}},[t._v("03丨二叉树的遍历")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/08/04.html"}},[t._v("04丨二叉查找树")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/08/05.html"}},[t._v("05丨支持重复数据的二叉查找树")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/08/06.html"}},[t._v("06丨相对散列表，为什么还用二叉树")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/08/07.html"}},[t._v("07丨红黑树")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/08/08.html"}},[t._v("08丨递归树与时间复杂度分析")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/09/01.html"}},[t._v("09丨堆")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/09/01.html"}},[t._v("01丨实现原理")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/09/02.html"}},[t._v("02丨堆排序")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/09/03.html"}},[t._v("03丨为什么快排比堆排序性能好？")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/09/04.html"}},[t._v("04丨堆的应用一：优先级队列")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/09/05.html"}},[t._v("05丨堆的应用二：求Top K")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/09/06.html"}},[t._v("06丨堆的应用三：求中位数和P99响应时间")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/09/07.html"}},[t._v("07丨获取热门Top 10搜索关键词")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/10/01.html"}},[t._v("10丨图")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/10/01.html"}},[t._v("01丨图概述")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/10/02.html"}},[t._v("02丨邻接矩阵存储方法")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/10/03.html"}},[t._v("03丨邻接表存储方法")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/10/04.html"}},[t._v("04丨如何存储微博、微信的好友关系？")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/10/05.html"}},[t._v("05丨广度优先搜索")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/10/06.html"}},[t._v("06丨深度优先搜索")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/11/01.html"}},[t._v("11丨Trie 树")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/11/01.html"}},[t._v("01丨实现原理")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/11/02.html"}},[t._v("02丨Trie 树真的很耗内存吗？")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/11/03.html"}},[t._v("03丨Trie树与散列表、红黑树的比较")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/11/04.html"}},[t._v("04丨实现搜索关键词的提示功能？")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/12/01.html"}},[t._v("12丨贪心算法")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/12/01.html"}},[t._v("01丨如何理解贪心算法")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/12/02.html"}},[t._v("02丨1.分糖果")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/12/03.html"}},[t._v("03丨2.钱币找零")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/12/04.html"}},[t._v("04丨3.区间覆盖")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/12/05.html"}},[t._v("05丨霍夫曼编码")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/13/01.html"}},[t._v("13丨分治算法")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/13/01.html"}},[t._v("01丨如何了理解分治算法")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/13/02.html"}},[t._v("02丨求逆序对数")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/13/03.html"}},[t._v("03丨分治思想在海量数据处理中的应用")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/14/01.html"}},[t._v("14丨回溯算法")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/14/01.html"}},[t._v("01丨如何理解回溯算法？")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/14/02.html"}},[t._v("02丨八皇后问题")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/14/03.html"}},[t._v("03丨0-1 背包")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/14/04.html"}},[t._v("04丨正则表达式")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/15/01.html"}},[t._v("15丨动态规划")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/15/01.html"}},[t._v("01丨0-1背包问题")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/15/02.html"}},[t._v("02丨0-1背包问题升级版")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/15/03.html"}},[t._v("03丨满减活动问题")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/15/04.html"}},[t._v("04丨一个模型三个特征")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/15/05.html"}},[t._v("05丨状态转移表法")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/15/06.html"}},[t._v("06丨状态转移方程法")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/15/07.html"}},[t._v("07丨如何量化两个字符串的相似度？")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/15/08.html"}},[t._v("08丨搜索引擎拼写纠错功能")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/15/09.html"}},[t._v("09丨例题一：爬楼梯")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/15/10.html"}},[t._v("10丨例题二：最大子序和")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/15/11.html"}},[t._v("11丨例题三：最长上升子序列")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/16/01.html"}},[t._v("16丨拓扑排序")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/16/01.html"}},[t._v("01丨概述")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/16/02.html"}},[t._v("02丨1.Kahn 算法")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/16/03.html"}},[t._v("03丨2.DFS 算法")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/17/01.html"}},[t._v("17丨Dijkstra最短路径算法")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/17/01.html"}},[t._v("01丨实现原理")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/17/02.html"}},[t._v("02丨优化最优出行路径问题")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/17/03.html"}},[t._v("03丨如何实现单词翻译功能？")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/17/04.html"}},[t._v("03丨如何用A*搜索算法实现游戏中的寻路功能？")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/18/01.html"}},[t._v("18丨位图与布隆过滤器")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/18/01.html"}},[t._v("01丨爬虫去重算法解析")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/18/02.html"}},[t._v("02丨位图")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/18/03.html"}},[t._v("03丨布隆过滤器")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/19/01.html"}},[t._v("19丨B+树")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/19/01.html"}},[t._v("01丨数据库索引设计")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/19/02.html"}},[t._v("02丨改造二叉查找树设计索引")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/19/03.html"}},[t._v("03丨构建索引常用的数据结构有哪些？")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/20/01.html"}},[t._v("20丨并行算法")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/20/01.html"}},[t._v("01丨并行排序")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/20/02.html"}},[t._v("02丨并行查找")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/20/03.html"}},[t._v("03丨并行字符串匹配")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/20/04.html"}},[t._v("04丨并行搜索")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/21/01.html"}},[t._v("21丨剖析Redis数据类型对应的数据结构")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/21/01.html"}},[t._v("01丨列表（list）")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/21/02.html"}},[t._v("02丨字典（hash）")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/21/03.html"}},[t._v("03丨集合（set）")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/21/04.html"}},[t._v("04丨有序集合（sortedset）")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/21/05.html"}},[t._v("05丨数据结构持久化")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/22/01.html"}},[t._v("22丨剖析搜索引擎背后的经典数据结构和算法")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/22/01.html"}},[t._v("01丨搜索引擎的设计与实现")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/22/02.html"}},[t._v("02丨搜集")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/22/03.html"}},[t._v("03丨分析")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/22/04.html"}},[t._v("04丨索引")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/22/05.html"}},[t._v("05丨查询")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/23/01.html"}},[t._v("23丨剖析高性能队列Disruptor背后的数据结构和算法")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/23/01.html"}},[t._v("01丨基于循环队列的“生产者 - 消费者模型”")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/23/02.html"}},[t._v("02丨基于加锁的并发“生产者 - 消费者模型”")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/23/03.html"}},[t._v("03丨基于无锁的并发“生产者 - 消费者模型”")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/24/01.html"}},[t._v("24丨剖析微服务接口鉴权限流背后的数据结构和算法")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/24/01.html"}},[t._v("01丨如何实现快速鉴权？")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/24/02.html"}},[t._v("02丨如何实现精准限流？")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/25/01.html"}},[t._v("25丨如何实现一个短网址系统？")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/25/01.html"}},[t._v("01丨短网址服务整体介绍")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/25/02.html"}},[t._v("02丨如何通过哈希算法生成短网址？")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/25/03.html"}},[t._v("03丨如何通过 ID 生成器生成短网址？")])],1)])]),t._v(" "),e("li",[e("p",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/26/01.html"}},[t._v("26丨实战题")])],1),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/26/01.html"}},[t._v("01丨实战测试题一")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/26/02.html"}},[t._v("02丨实战测试题二")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/26/03.html"}},[t._v("03丨实战测试题三")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/26/04.html"}},[t._v("04丨实战测试题四")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/26/05.html"}},[t._v("05丨实战测试题五")])],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/interview/data-structure-and-algorithm/notes/26/06.html"}},[t._v("06丨实战测试题六")])],1)])])])])}),[],!1,null,null,null);r.default=i.exports}}]);