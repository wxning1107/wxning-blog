(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{621:function(v,_,t){v.exports=t.p+"assets/img/image-20211023144157703.73bfc5fd.png"},622:function(v,_,t){v.exports=t.p+"assets/img/image-20211023144315591.796aac6c.png"},623:function(v,_,t){v.exports=t.p+"assets/img/image-20211023144346527.7af9b71e.png"},624:function(v,_,t){v.exports=t.p+"assets/img/image-20211023144543184.982c9401.png"},847:function(v,_,t){"use strict";t.r(_);var o=t(15),s=Object(o.a)({},(function(){var v=this,_=v.$createElement,o=v._self._c||_;return o("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[o("h1",{attrs:{id:"cdn静态资源加速"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#cdn静态资源加速"}},[v._v("#")]),v._v(" CDN静态资源加速")]),v._v(" "),o("ol",[o("li",[v._v("对于移动 APP 来说，这些静态资源主要是图片、视频和流媒体信息。")]),v._v(" "),o("li",[v._v("对于 Web 网站来说，则包括了 JavaScript 文件，CSS 文件，静态 HTML 文件等等。")])]),v._v(" "),o("p",[v._v("一般来说，图片和视频的大小会在几兆到几百兆之间不等，如果我们的应用服务器和分布式缓存都部署在北京的机房里，这时一个杭州的用户要访问缓存中的一个视频，那这个视频文件就需要从北京传输到杭州，期间会经过多个公网骨干网络，延迟很高，会让用户感觉视频打开很慢，严重影响到用户的使用体验。")]),v._v(" "),o("p",[v._v("所以，静态资源访问的关键点是 "),o("strong",[v._v("就近访问，")]),v._v(" 即北京用户访问北京的数据，杭州用户访问杭州的数据，这样才可以达到性能的最优。")]),v._v(" "),o("p",[v._v("我们考虑在业务服务器的上层，增加一层特殊的缓存，用来承担绝大部分对于静态资源的访问，这一层特殊缓存的节点需要遍布在全国各地，这样可以让用户选择最近的节点访问。缓存的命中率也需要一定的保证，尽量减少访问资源存储源站的请求数量（回源请求）。 "),o("strong",[v._v("这一层缓存就是：CDN。")])]),v._v(" "),o("p",[v._v("CDN（Content Delivery Network/Content Distribution Network，内容分发网络）。简单来说，CDN 就是将静态的资源分发到，位于多个地理位置机房中的服务器上，因此它能很好地解决数据就近访问的问题，也就加快了静态资源的访问速度。")]),v._v(" "),o("h2",{attrs:{id:"如何让用户的请求到达-cdn-节点"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#如何让用户的请求到达-cdn-节点"}},[v._v("#")]),v._v(" 如何让用户的请求到达 CDN 节点")]),v._v(" "),o("p",[v._v("首先，我们考虑一下如何让用户的请求到达 CDN 节点，你可能会觉得，这很简单啊，只需要告诉用户 CDN 节点的 IP 地址，然后请求这个 IP 地址上面部署的 CDN 服务就可以了啊。 "),o("strong",[v._v("但是这样会有一个问题：")]),v._v(" 就是我们使用的是第三方厂商的 CDN 服务，CDN 厂商会给我们一个 CDN 的节点 IP，比如说这个 IP 地址是「111.202.34.130」，那么我们的电商系统中的图片的地址很可能是这样的：「http://111.202.34.130/1.jpg」， 这个地址是要存储在数据库中的。")]),v._v(" "),o("p",[v._v("那么如果这个节点 IP 发生了变更怎么办？或者我们如果更改了 CDN 厂商怎么办？是不是要修改所有的商品的 url 域名呢？这就是一个比较大的工作量了。所以，我们要做的事情是 "),o("strong",[v._v("将第三方厂商提供的 IP 隐藏起来，给到用户的最好是一个本公司域名的子域名。")])]),v._v(" "),o("p",[o("strong",[v._v("那么如何做到这一点呢？")]),v._v(" 这就需要依靠 DNS 来帮我们解决域名映射的问题了。")]),v._v(" "),o("p",[v._v("DNS（Domain Name System，域名系统）实际上就是一个存储域名和 IP 地址对应关系的分布式数据库。而域名解析的结果一般有两种：")]),v._v(" "),o("ul",[o("li",[o("p",[v._v("一种叫做 "),o("code",[v._v("A 记录")]),v._v("，返回的是域名对应的 IP 地址；")])]),v._v(" "),o("li",[o("p",[v._v("另一种是 "),o("code",[v._v("CNAME 记录")]),v._v("，返回的是另一个域名")]),v._v(" "),o("p",[v._v("也就是说当前域名的解析要跳转到另一个域名的解析上，实际上 www.baidu.com 域名的解析结果就是一个 CNAME 记录，域名的解析被跳转到 www.a.shifen.com 上了，我们正是利用 CNAME 记录来解决域名映射问题的，"),o("strong",[v._v("具体是怎么解决的呢？我给你举个例子。")])])])]),v._v(" "),o("p",[v._v("比如你的公司的一级域名叫做 "),o("code",[v._v("example.com")]),v._v("，那么你可以给你的图片服务的域名定义为 "),o("code",[v._v("img.example.com")]),v._v("，然后将这个域名的解析结果的 CNAME 配置到 CDN 提供的域名上。比如 uclound 可能会提供一个域名是 "),o("code",[v._v("80f21f91.cdn.ucloud.com.cn")]),v._v(" 这个域名。这样你的电商系统使用的图片地址可以是 "),o("code",[v._v("http://img.example.com/1.jpg")]),v._v("。")]),v._v(" "),o("p",[v._v("用户在请求这个地址时，DNS 服务器会将域名解析到 "),o("code",[v._v("80f21f91.cdn.ucloud.com.cn")]),v._v(" 域名上，然后再将这个域名解析为 CDN 的节点 IP，这样就可以得到 CDN 上面的资源数据了。")]),v._v(" "),o("p",[o("strong",[v._v("不过，这里面有一个问题：")]),v._v(" 因为域名解析过程是分级的，每一级有专门的域名服务器承担解析的职责，所以，域名的解析过程有可能需要跨越公网做多次 DNS 查询，在性能上是比较差的。")]),v._v(" "),o("p",[o("img",{attrs:{src:t(621),alt:"img"}})]),v._v(" "),o("p",[v._v("从 「域名分级解析示意图」中你可以看出 DNS 分为很多种，有根 DNS，顶级 DNS 等等。除此之外还有两种 DNS 需要特别留意：")]),v._v(" "),o("ul",[o("li",[v._v("一种是 Local DNS，它是由你的运营商提供的 DNS，一般域名解析的第一站会到这里；")]),v._v(" "),o("li",[v._v("另一种是权威 DNS，它的含义是自身数据库中存储了这个域名对应关系的 DNS。")])]),v._v(" "),o("p",[v._v("下面我以 "),o("code",[v._v("www.baidu.com")]),v._v(" 这个域名为例给你简单介绍一下域名解析的过程：")]),v._v(" "),o("ul",[o("li",[v._v("一开始，域名解析请求先会检查本机的 hosts 文件，查看是否有 "),o("code",[v._v("www.baidu.com")]),v._v(" 对应的 IP；")]),v._v(" "),o("li",[v._v("如果没有的话，就请求 "),o("code",[v._v("Local DNS")]),v._v(" 是否有域名解析结果的缓存，如果有就返回，标识是从非权威 DNS 返回的结果；")]),v._v(" "),o("li",[v._v("如果没有，就开始 DNS 的迭代查询：\n"),o("ol",[o("li",[v._v("先请求根 DNS，根 DNS 返回顶级 DNS（"),o("code",[v._v(".com")]),v._v("）的地址；")]),v._v(" "),o("li",[v._v("再请求 "),o("code",[v._v(".com")]),v._v(" 顶级 DNS，得到 "),o("code",[v._v("baidu.com")]),v._v(" 的域名服务器地址；")]),v._v(" "),o("li",[v._v("再从 baidu.com 的域名服务器中查询到 "),o("code",[v._v("www.baidu.com")]),v._v(" 对应的 IP 地址，返回这个 IP 地址的同时，标记这个结果是来自于权威 DNS 的结果，同时写入 Local DNS 的解析结果缓存，这样下一次的解析同一个域名就不需要做 DNS 的迭代查询了。")])])])]),v._v(" "),o("p",[v._v("经过了向多个 DNS 服务器做查询之后，整个 DNS 的解析的时间有可能会到秒级别， "),o("strong",[v._v("那么我们如何来解决这个性能问题呢？")])]),v._v(" "),o("p",[o("strong",[v._v("一个解决的思路是：")]),v._v(" 在 APP 启动时，对需要解析的域名做预先解析，然后把解析的结果缓存到本地的一个 LRU 缓存里面。这样当我们要使用这个域名的时候，只需要从缓存中直接拿到所需要的 IP 地址就好了，如果缓存中不存在才会走整个 DNS 查询的过程。 "),o("strong",[v._v("同时，")]),v._v(" 为了避免 DNS 解析结果的变更造成缓存内数据失效，我们可以启动一个定时器，定期地更新缓存中的数据。")]),v._v(" "),o("p",[o("strong",[v._v("我曾经测试过这种方式，")]),v._v(" 对于 HTTP 请求的响应时间的提升是很明显的，原先 DNS 解析时间经常会超过 1s，使用这种方式后，DNS 解析时间可以控制在 200ms 之内，整个 HTTP 请求的过程也可以减少大概 80ms～100ms。")]),v._v(" "),o("p",[o("img",{attrs:{src:t(622),alt:"img"}})]),v._v(" "),o("p",[o("strong",[v._v("这里总结一下，")]),v._v(" 将用户的请求映射到 CDN 服务器上，是使用 CDN 时需要解决的一个核心的问题，而 CNAME 记录在 DNS 解析过程中可以充当一个中间代理层的角色，可以把将用户最初使用的域名代理到正确的 IP 地址上。图片:")]),v._v(" "),o("p",[o("img",{attrs:{src:t(623),alt:"img"}})]),v._v(" "),o("h2",{attrs:{id:"如何找到离用户最近的-cdn-节点"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#如何找到离用户最近的-cdn-节点"}},[v._v("#")]),v._v(" 如何找到离用户最近的 CDN 节点")]),v._v(" "),o("p",[v._v("GSLB（Global Server Load Balance，全局负载均衡），它的含义是对于部署在不同地域的服务器之间做负载均衡，下面可能管理了很多的本地负载均衡组件。 "),o("strong",[v._v("它有两方面的作用：")])]),v._v(" "),o("ul",[o("li",[v._v("一方面，它是一种负载均衡服务器，负载均衡，顾名思义嘛，指的是让流量平均分配使得下面管理的服务器的负载更平均；")]),v._v(" "),o("li",[v._v("另一方面，它还需要保证流量流经的服务器与流量源头在地缘上是比较接近的。")])]),v._v(" "),o("p",[v._v("GSLB 可以 "),o("strong",[v._v("通过多种策略")]),v._v("，来保证返回的 CDN 节点和用户尽量保证在同一地缘区域，比如说可以将用户的 IP 地址按照地理位置划分为若干的区域，然后将 CDN 节点对应到一个区域上，然后根据用户所在区域来返回合适的节点；也可以通过发送数据包测量 RTT 的方式来决定返回哪一个节点。")]),v._v(" "),o("p",[o("img",{attrs:{src:t(624),alt:"img"}})]),v._v(" "),o("p",[o("strong",[v._v("当然，是否能够从 CDN 节点上获取到资源还取决于 CDN 的同步延时。")]),v._v(" "),o("strong",[v._v("一般，我们会通过 CDN 厂商的接口将静态的资源写入到某一个 CDN 节点上")]),v._v(" ，再由 CDN 内部的同步机制将资源分散同步到每个 CDN 节点，即使 CDN 内部网络经过了优化，这个同步的过程是有延时的，一旦我们无法从选定的 CDN 节点上获取到数据，我们就不得不从源站获取数据，而用户网络到源站的网络可能会跨越多个主干网，这样不仅性能上有损耗，也会消耗源站的带宽，带来更高的研发成本。所以，我们在使用 CDN 的时候需要关注 CDN 的命中率和源站的带宽情况。")])])}),[],!1,null,null,null);_.default=s.exports}}]);