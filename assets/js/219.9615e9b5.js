(window.webpackJsonp=window.webpackJsonp||[]).push([[219],{1310:function(t,a,s){"use strict";s.r(a);var r=s(15),v=Object(r.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"数据一致性问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据一致性问题"}},[t._v("#")]),t._v(" 数据一致性问题")]),t._v(" "),r("h1",{attrs:{id:"情况一-先删除缓存-再更新数据库"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#情况一-先删除缓存-再更新数据库"}},[t._v("#")]),t._v(" 情况一：先删除缓存，再更新数据库")]),t._v(" "),r("p",[t._v("假设线程 A 删除缓存值后，还没有来得及更新数据库（比如说有网络延迟），线程 B 就开始读取数据了，那么这个时候，线程 B 会发现缓存缺失，就只能去数据库读取。这会带来两个问题：")]),t._v(" "),r("ul",[r("li",[t._v("线程 B 读取到了旧值；")]),t._v(" "),r("li",[t._v("线程 B 是在缓存缺失的情况下读取的数据库，所以，它还会把旧值写入缓存，这可能会导致其他线程从缓存中读到旧值。")])]),t._v(" "),r("p",[t._v("等到线程 B 从数据库读取完数据、更新了缓存后，线程 A 才开始更新数据库，此时，缓存中的数据是旧值，而数据库中的是最新值，两者就不一致了。")]),t._v(" "),r("p",[t._v("解决方案：")]),t._v(" "),r("p",[r("strong",[t._v("在线程 A 更新完数据库值以后，我们可以让它先 sleep 一小段时间，再进行一次缓存删除操作。")])]),t._v(" "),r("p",[t._v("之所以要加上 sleep 的这段时间，就是为了让线程 B 能够先从数据库读取数据，再把缺失的数据写入缓存，然后，线程 A 再进行删除。所以，线程 A sleep 的时间，就需要大于线程 B 读取数据再写入缓存的时间。")]),t._v(" "),r("p",[t._v("因为这个方案会在第一次删除缓存值后，延迟一段时间再次进行删除，所以我们也把它叫做“延迟双删”。")]),t._v(" "),r("h1",{attrs:{id:"情况二-先更新数据库值-再删除缓存值"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#情况二-先更新数据库值-再删除缓存值"}},[t._v("#")]),t._v(" 情况二：先更新数据库值，再删除缓存值")]),t._v(" "),r("p",[t._v("如果线程 A 删除了数据库中的值，但还没来得及删除缓存值，线程 B 就开始读取数据了，那么此时，线程 B 查询缓存时，发现缓存命中，就会直接从缓存中读取旧值。不过，在这种情况下，如果其他线程并发读缓存的请求不多，那么，就不会有很多请求读取到旧值。而且，线程 A 一般也会很快删除缓存值，这样一来，其他线程再次读取时，就会发生缓存缺失，进而从数据库中读取最新值。所以，这种情况对业务的影响较小。")]),t._v(" "),r("h1",{attrs:{id:"没有并发请求"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#没有并发请求"}},[t._v("#")]),t._v(" 没有并发请求")]),t._v(" "),r("p",[t._v("删除缓存和删除数据库应该保证原子性，如果任意一个失败则导致数据一致性问题，解决方法是重试机制。")]),t._v(" "),r("p",[t._v("具体来说，可以把要删除的缓存值或者是要更新的数据库值暂存到消息队列中（例如使用 Kafka 消息队列）。当应用没有能够成功地删除缓存值或者是更新数据库值时，可以从消息队列中重新读取这些值，然后再次进行删除或更新。")]),t._v(" "),r("p",[t._v("如果能够成功地删除或更新，我们就要把这些值从消息队列中去除，以免重复操作，此时，我们也可以保证数据库和缓存的数据一致了。")]),t._v(" "),r("h1",{attrs:{id:"总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),r("p",[r("img",{attrs:{src:s(860),alt:"img"}})])])}),[],!1,null,null,null);a.default=v.exports},860:function(t,a,s){t.exports=s.p+"assets/img/image-20211126113820909.4d88d9f7.png"}}]);