(window.webpackJsonp=window.webpackJsonp||[]).push([[347],{1184:function(t,e,s){"use strict";s.r(e);var n=s(15),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"集合-set"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集合-set"}},[t._v("#")]),t._v(" 集合（set）")]),t._v(" "),s("p",[t._v("集合这种数据类型用来存储一组不重复的数据。这种数据类型也有两种实现方法，一种是基于有序数组，另一种是基于散列表。")]),t._v(" "),s("p",[t._v("当要存储的数据，同时满足下面这样两个条件的时候，Redis 就采用有序数组，来实现集合这种数据类型。")]),t._v(" "),s("ul",[s("li",[t._v("存储的数据都是整数；")]),t._v(" "),s("li",[t._v("存储的数据元素个数不超过 512 个。")])]),t._v(" "),s("p",[t._v("当不能同时满足这两个条件的时候，Redis 就使用散列表来存储集合中的数据。")])])}),[],!1,null,null,null);e.default=r.exports}}]);